name: Build and Test

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          auto-update-conda: true

      - name: Patch required Python version
        run: |
          sed -i "s|python .\+|python ==${{ inputs.python-version }}|g" environment.yml
          cat environment.yml

      - name: Create and validate conda environment
        shell: bash
        run: |
          conda env create -f environment.yml --prefix ./.env
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          python -V
          python -c "import sys; v = sys.version_info; assert f'{v.major}.{v.minor}' == '${{ inputs.python-version }}'"

      - name: Extract libcarna version
        id: meta
        shell: bash
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          export libcarna_version=$(conda list --json |jq -rj '[ .[] | select( .name == "libcarna" ) ][0].version')
          echo "libcarna_version=$libcarna_version" >> "$GITHUB_OUTPUT"

      - name: Build dist
        shell: bash
        run: ./linux_build.bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ inputs.python-version }}
          path: |
             dist

    outputs:
      libcarna_version: ${{ steps.meta.outputs.libcarna_version }}

  test:
    needs: build
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ inputs.python-version }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          auto-update-conda: true

      - name: Create and validate conda environment
        shell: bash
        run: |
          conda create --prefix ./.env -c conda-forge -c bioconda \
            python==${{ inputs.python-version }} \
            libcarna==${{ needs.build.outputs.libcarna_version }} \
            pip
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          python -V
          python -c "import sys; v = sys.version_info; assert f'{v.major}.{v.minor}' == '${{ inputs.python-version }}'"

      - name: Install wheel
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          pip install libcarna_python-*.whl

      - name: Test installation
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          python -c "import libcarna; assert libcarna.libcarna_version == '${{ needs.build.outputs.libcarna_version }}'"

      - name: Install dependencies for tests and examples
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          pip install -r test/requirements.txt
          pip install nbconvert

      - name: Run tests
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          cd test && python -m unittest

      - name: Run example notebooks
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ./.env
          jupyter nbconvert --execute --to notebook --inplace examples/*.ipynb

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: examples-${{ inputs.python-version }}
          path: examples